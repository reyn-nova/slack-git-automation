on:
  pull_request:
    types: [opened, closed]

jobs:
  PR-Created:
    if: github.event_name == 'pull_request' && github.event.action == 'opened'
    runs-on: ubuntu-latest
    env:
      REPO_NAME: ${{ github.event.pull_request.base.repo.name }}
      PR_TITLE: ${{ github.event.pull_request.title }}
      PR_URL: ${{ github.event.pull_request.html_url }}
      PR_OPENER: ${{ github.event.pull_request.user.login }}
      BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
    steps:
      - name: Join requested reviewers
        run: |
          # Extract the requested reviewers' logins from the event payload and convert to JSON
          reviewers_json=$(echo '${{ toJson(github.event.pull_request.requested_reviewers) }}')

          # Use jq to extract the login names and join them with commas
          joined_reviewers=$(echo "$reviewers_json" | jq -r 'map(.login) | join(",")')

          # Output the joined reviewers
          echo "Joined reviewers: $joined_reviewers"
          echo "::set-output name=reviewers::$joined_reviewers"
        id: join-reviewers

      - name: Sending Slack Message
        uses: slackapi/slack-github-action@v1.26.0
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        with:
          channel-id: ${{ secrets.SLACK_TARGET_CHANNEL_ID }}
          payload: |
            {
              "text": "${{ env.REPO_NAME }}\n\nPR for \"${{ env.PR_TITLE}}\" (${{ env.BRANCH_NAME }})\nRepo: ${{ env.REPO_NAME }}\n${{ env.PR_URL }}\n\nOpened by: ${{ env.PR_OPENER }}\nRequested Reviewers: ${{ steps.join-reviewers.outputs.reviewers }}"
            }

  PR-Closed:
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    env:
      REPO_NAME: ${{ github.event.pull_request.base.repo.name }}
      PR_TITLE: ${{ github.event.pull_request.title }}
      PR_URL: ${{ github.event.pull_request.html_url }}
      PR_OPENER: ${{ github.event.pull_request.user.login }}
      BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
      PR_MERGER: ${{ github.event.pull_request.merged_by.login }}
    steps:
      - name: Find previous Slack message
        run: |
          #!/bin/bash

          # Call the Slack API to search for messages
          response=$(curl -s -X GET "https://slack.com/api/search.messages" \
            -H "Authorization: Bearer ${{ secrets.SLACK_USER_TOKEN }}" \
            -G --data-urlencode "query=PR for \"${{ env.PR_TITLE}}\" (${{ env.BRANCH_NAME }})" \
            -G --data-urlencode "channel=${{ secrets.SLACK_TARGET_CHANNEL_ID }}")

          thread_ts=$(echo $response | jq -r '.messages.matches[0].ts')
          
          echo "::set-output name=thread_ts::$thread_ts"
        id: find-thread-ts

      - name: Join requested reviewers
        run: |
          # Extract the requested reviewers' logins from the event payload and convert to JSON
          reviewers_json=$(echo '${{ toJson(github.event.pull_request.requested_reviewers) }}')

          # Use jq to extract the login names and join them with commas
          joined_reviewers=$(echo "$reviewers_json" | jq -r 'map(.login) | join(",")')

          # Output the joined reviewers
          echo "Joined reviewers: $joined_reviewers"
          echo "::set-output name=reviewers::$joined_reviewers"
        id: join-reviewers

      - name: Update previous Slack Message
        uses: slackapi/slack-github-action@v1.26.0
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        with:
          channel-id: ${{ secrets.SLACK_TARGET_CHANNEL_ID }}
          update-ts: ${{ steps.find-thread-ts.outputs.thread_ts }}
          payload: |
            {
              "text": "âœ… PR for \"${{ env.PR_TITLE}}\" (${{ env.BRANCH_NAME }})\nRepo: ${{ env.REPO_NAME }}\n${{ env.PR_URL }}\n\nOpened by: ${{ env.PR_OPENER }}\nRequested Reviewers: ${{ steps.join-reviewers.outputs.reviewers }}"
            }

      - name: Sending Slack Reply
        uses: slackapi/slack-github-action@v1.26.0
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        with:
          channel-id: ${{ secrets.SLACK_TARGET_CHANNEL_ID }}
          payload: |
            {
              "thread_ts": "${{ steps.find-thread-ts.outputs.thread_ts }}",
              "text": "Merged by ${{ env.PR_MERGER }}"
            }
